name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: android-arm64
            os: ubuntu-latest
            cargo_build_target: aarch64-linux-android
          - target: darwin-amd64
            os: macos-latest
            cargo_build_target: x86_64-apple-darwin
          - target: darwin-arm64
            os: macos-latest
            cargo_build_target: aarch64-apple-darwin
          - target: linux-amd64
            os: ubuntu-latest
            cargo_build_target: x86_64-unknown-linux-gnu
          - target: windows-amd64
            os: windows-latest
            cargo_build_target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    env:
      CARGO_BUILD_TARGET: ${{ matrix.cargo_build_target }}
      TARGET: ${{ matrix.target }}
    steps:
    - uses: actions/checkout@v4
    - uses: r7kamura/rust-problem-matchers@v1
    - name: Build
      shell: bash
      run: scripts/build_dist.sh ci-run

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            bins: --bins
          - os: macOS-latest
            bins: --bins
    runs-on: ${{ matrix.os }}
    # Token needed for the integration tests using the gh command line
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
    - uses: actions/checkout@v4
    - uses: r7kamura/rust-problem-matchers@v1
    - name: Run tests
      run: cargo test ${{ matrix.bins }}

  rust-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: r7kamura/rust-problem-matchers@v1
    - name: Run Format
      run: cargo fmt --all -- --check
    - name: Run clippy
      run: cargo clippy --all --all-features -- -D warnings

  markdown-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: xt0rted/markdownlint-problem-matcher@v3
      - uses: DavidAnson/markdownlint-cli2-action@v17
        with:
          globs: "**/*.md"
